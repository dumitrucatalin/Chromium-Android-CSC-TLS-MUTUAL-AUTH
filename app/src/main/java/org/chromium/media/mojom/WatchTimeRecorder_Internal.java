
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     media/mojo/interfaces/watch_time_recorder.mojom
//

package org.chromium.media.mojom;

import org.chromium.mojo.bindings.DeserializationException;


class WatchTimeRecorder_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<WatchTimeRecorder, WatchTimeRecorder.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<WatchTimeRecorder, WatchTimeRecorder.Proxy>() {
    
        @Override
        public String getName() {
            return "media::mojom::WatchTimeRecorder";
        }
    
        @Override
        public int getVersion() {
          return 0;
        }
    
        @Override
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }
    
        @Override
        public Stub buildStub(org.chromium.mojo.system.Core core, WatchTimeRecorder impl) {
            return new Stub(core, impl);
        }
    
        @Override
        public WatchTimeRecorder[] buildArray(int size) {
          return new WatchTimeRecorder[size];
        }
    };


    private static final int RECORD_WATCH_TIME_ORDINAL = 0;

    private static final int FINALIZE_WATCH_TIME_ORDINAL = 1;

    private static final int ON_ERROR_ORDINAL = 2;

    private static final int SET_AUDIO_DECODER_NAME_ORDINAL = 3;

    private static final int SET_VIDEO_DECODER_NAME_ORDINAL = 4;

    private static final int UPDATE_UNDERFLOW_COUNT_ORDINAL = 5;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements WatchTimeRecorder.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void recordWatchTime(
int key, org.chromium.mojo.common.mojom.TimeDelta watchTime) {

            WatchTimeRecorderRecordWatchTimeParams _message = new WatchTimeRecorderRecordWatchTimeParams();

            _message.key = key;

            _message.watchTime = watchTime;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RECORD_WATCH_TIME_ORDINAL)));

        }


        @Override
        public void finalizeWatchTime(
int[] watchTimeKeys) {

            WatchTimeRecorderFinalizeWatchTimeParams _message = new WatchTimeRecorderFinalizeWatchTimeParams();

            _message.watchTimeKeys = watchTimeKeys;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(FINALIZE_WATCH_TIME_ORDINAL)));

        }


        @Override
        public void onError(
int status) {

            WatchTimeRecorderOnErrorParams _message = new WatchTimeRecorderOnErrorParams();

            _message.status = status;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(ON_ERROR_ORDINAL)));

        }


        @Override
        public void setAudioDecoderName(
String name) {

            WatchTimeRecorderSetAudioDecoderNameParams _message = new WatchTimeRecorderSetAudioDecoderNameParams();

            _message.name = name;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_AUDIO_DECODER_NAME_ORDINAL)));

        }


        @Override
        public void setVideoDecoderName(
String name) {

            WatchTimeRecorderSetVideoDecoderNameParams _message = new WatchTimeRecorderSetVideoDecoderNameParams();

            _message.name = name;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_VIDEO_DECODER_NAME_ORDINAL)));

        }


        @Override
        public void updateUnderflowCount(
int count) {

            WatchTimeRecorderUpdateUnderflowCountParams _message = new WatchTimeRecorderUpdateUnderflowCountParams();

            _message.count = count;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(UPDATE_UNDERFLOW_COUNT_ORDINAL)));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<WatchTimeRecorder> {

        Stub(org.chromium.mojo.system.Core core, WatchTimeRecorder impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(org.chromium.mojo.bindings.MessageHeader.NO_FLAG)) {
                    return false;
                }
                switch(header.getType()) {
            
                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                WatchTimeRecorder_Internal.MANAGER, messageWithHeader);
            
            
            
            
            
                    case RECORD_WATCH_TIME_ORDINAL: {
            
                        WatchTimeRecorderRecordWatchTimeParams data =
                                WatchTimeRecorderRecordWatchTimeParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().recordWatchTime(data.key, data.watchTime);
                        return true;
                    }
            
            
            
            
            
                    case FINALIZE_WATCH_TIME_ORDINAL: {
            
                        WatchTimeRecorderFinalizeWatchTimeParams data =
                                WatchTimeRecorderFinalizeWatchTimeParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().finalizeWatchTime(data.watchTimeKeys);
                        return true;
                    }
            
            
            
            
            
                    case ON_ERROR_ORDINAL: {
            
                        WatchTimeRecorderOnErrorParams data =
                                WatchTimeRecorderOnErrorParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().onError(data.status);
                        return true;
                    }
            
            
            
            
            
                    case SET_AUDIO_DECODER_NAME_ORDINAL: {
            
                        WatchTimeRecorderSetAudioDecoderNameParams data =
                                WatchTimeRecorderSetAudioDecoderNameParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().setAudioDecoderName(data.name);
                        return true;
                    }
            
            
            
            
            
                    case SET_VIDEO_DECODER_NAME_ORDINAL: {
            
                        WatchTimeRecorderSetVideoDecoderNameParams data =
                                WatchTimeRecorderSetVideoDecoderNameParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().setVideoDecoderName(data.name);
                        return true;
                    }
            
            
            
            
            
                    case UPDATE_UNDERFLOW_COUNT_ORDINAL: {
            
                        WatchTimeRecorderUpdateUnderflowCountParams data =
                                WatchTimeRecorderUpdateUnderflowCountParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().updateUnderflowCount(data.count);
                        return true;
                    }
            
            
                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG)) {
                    return false;
                }
                switch(header.getType()) {
            
                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), WatchTimeRecorder_Internal.MANAGER, messageWithHeader, receiver);
            
            
            
            
            
            
            
            
            
            
            
            
            
            
                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }
    }


    
    static final class WatchTimeRecorderRecordWatchTimeParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public int key;
        public org.chromium.mojo.common.mojom.TimeDelta watchTime;
    
        private WatchTimeRecorderRecordWatchTimeParams(int version) {
            super(STRUCT_SIZE, version);
        }
    
        public WatchTimeRecorderRecordWatchTimeParams() {
            this(0);
        }
    
        public static WatchTimeRecorderRecordWatchTimeParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WatchTimeRecorderRecordWatchTimeParams deserialize(java.nio.ByteBuffer data) {
            if (data == null)
                return null;
    
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }
    
        @SuppressWarnings("unchecked")
        public static WatchTimeRecorderRecordWatchTimeParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WatchTimeRecorderRecordWatchTimeParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                result = new WatchTimeRecorderRecordWatchTimeParams(mainDataHeader.elementsOrVersion);
                if (mainDataHeader.elementsOrVersion >= 0) {
                    
                    result.key = decoder0.readInt(8);
                        WatchTimeKey.validate(result.key);
                }
                if (mainDataHeader.elementsOrVersion >= 0) {
                    
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(16, false);
                    result.watchTime = org.chromium.mojo.common.mojom.TimeDelta.decode(decoder1);
                }
            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.key, 8);
            
            encoder0.encode(this.watchTime, 16, false);
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
            WatchTimeRecorderRecordWatchTimeParams other = (WatchTimeRecorderRecordWatchTimeParams) object;
            if (this.key!= other.key)
                return false;
            if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.watchTime, other.watchTime))
                return false;
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.key);
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.watchTime);
            return result;
        }
    }



    
    static final class WatchTimeRecorderFinalizeWatchTimeParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public int[] watchTimeKeys;
    
        private WatchTimeRecorderFinalizeWatchTimeParams(int version) {
            super(STRUCT_SIZE, version);
        }
    
        public WatchTimeRecorderFinalizeWatchTimeParams() {
            this(0);
        }
    
        public static WatchTimeRecorderFinalizeWatchTimeParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WatchTimeRecorderFinalizeWatchTimeParams deserialize(java.nio.ByteBuffer data) {
            if (data == null)
                return null;
    
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }
    
        @SuppressWarnings("unchecked")
        public static WatchTimeRecorderFinalizeWatchTimeParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WatchTimeRecorderFinalizeWatchTimeParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                result = new WatchTimeRecorderFinalizeWatchTimeParams(mainDataHeader.elementsOrVersion);
                if (mainDataHeader.elementsOrVersion >= 0) {
                    
                    result.watchTimeKeys = decoder0.readInts(8, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    {
                        for (int i0 = 0; i0 < result.watchTimeKeys.length; ++i0) {
                            WatchTimeKey.validate(result.watchTimeKeys[i0]);
                        }
                    }
                }
            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.watchTimeKeys, 8, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
            WatchTimeRecorderFinalizeWatchTimeParams other = (WatchTimeRecorderFinalizeWatchTimeParams) object;
            if (!java.util.Arrays.equals(this.watchTimeKeys, other.watchTimeKeys))
                return false;
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
            result = prime * result + java.util.Arrays.hashCode(this.watchTimeKeys);
            return result;
        }
    }



    
    static final class WatchTimeRecorderOnErrorParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public int status;
    
        private WatchTimeRecorderOnErrorParams(int version) {
            super(STRUCT_SIZE, version);
        }
    
        public WatchTimeRecorderOnErrorParams() {
            this(0);
        }
    
        public static WatchTimeRecorderOnErrorParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WatchTimeRecorderOnErrorParams deserialize(java.nio.ByteBuffer data) {
            if (data == null)
                return null;
    
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }
    
        @SuppressWarnings("unchecked")
        public static WatchTimeRecorderOnErrorParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WatchTimeRecorderOnErrorParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                result = new WatchTimeRecorderOnErrorParams(mainDataHeader.elementsOrVersion);
                if (mainDataHeader.elementsOrVersion >= 0) {
                    
                    result.status = decoder0.readInt(8);
                        PipelineStatus.validate(result.status);
                }
            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.status, 8);
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
            WatchTimeRecorderOnErrorParams other = (WatchTimeRecorderOnErrorParams) object;
            if (this.status!= other.status)
                return false;
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.status);
            return result;
        }
    }



    
    static final class WatchTimeRecorderSetAudioDecoderNameParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public String name;
    
        private WatchTimeRecorderSetAudioDecoderNameParams(int version) {
            super(STRUCT_SIZE, version);
        }
    
        public WatchTimeRecorderSetAudioDecoderNameParams() {
            this(0);
        }
    
        public static WatchTimeRecorderSetAudioDecoderNameParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WatchTimeRecorderSetAudioDecoderNameParams deserialize(java.nio.ByteBuffer data) {
            if (data == null)
                return null;
    
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }
    
        @SuppressWarnings("unchecked")
        public static WatchTimeRecorderSetAudioDecoderNameParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WatchTimeRecorderSetAudioDecoderNameParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                result = new WatchTimeRecorderSetAudioDecoderNameParams(mainDataHeader.elementsOrVersion);
                if (mainDataHeader.elementsOrVersion >= 0) {
                    
                    result.name = decoder0.readString(8, false);
                }
            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.name, 8, false);
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
            WatchTimeRecorderSetAudioDecoderNameParams other = (WatchTimeRecorderSetAudioDecoderNameParams) object;
            if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.name, other.name))
                return false;
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.name);
            return result;
        }
    }



    
    static final class WatchTimeRecorderSetVideoDecoderNameParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public String name;
    
        private WatchTimeRecorderSetVideoDecoderNameParams(int version) {
            super(STRUCT_SIZE, version);
        }
    
        public WatchTimeRecorderSetVideoDecoderNameParams() {
            this(0);
        }
    
        public static WatchTimeRecorderSetVideoDecoderNameParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WatchTimeRecorderSetVideoDecoderNameParams deserialize(java.nio.ByteBuffer data) {
            if (data == null)
                return null;
    
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }
    
        @SuppressWarnings("unchecked")
        public static WatchTimeRecorderSetVideoDecoderNameParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WatchTimeRecorderSetVideoDecoderNameParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                result = new WatchTimeRecorderSetVideoDecoderNameParams(mainDataHeader.elementsOrVersion);
                if (mainDataHeader.elementsOrVersion >= 0) {
                    
                    result.name = decoder0.readString(8, false);
                }
            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.name, 8, false);
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
            WatchTimeRecorderSetVideoDecoderNameParams other = (WatchTimeRecorderSetVideoDecoderNameParams) object;
            if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.name, other.name))
                return false;
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.name);
            return result;
        }
    }



    
    static final class WatchTimeRecorderUpdateUnderflowCountParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public int count;
    
        private WatchTimeRecorderUpdateUnderflowCountParams(int version) {
            super(STRUCT_SIZE, version);
        }
    
        public WatchTimeRecorderUpdateUnderflowCountParams() {
            this(0);
        }
    
        public static WatchTimeRecorderUpdateUnderflowCountParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static WatchTimeRecorderUpdateUnderflowCountParams deserialize(java.nio.ByteBuffer data) {
            if (data == null)
                return null;
    
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }
    
        @SuppressWarnings("unchecked")
        public static WatchTimeRecorderUpdateUnderflowCountParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            WatchTimeRecorderUpdateUnderflowCountParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                result = new WatchTimeRecorderUpdateUnderflowCountParams(mainDataHeader.elementsOrVersion);
                if (mainDataHeader.elementsOrVersion >= 0) {
                    
                    result.count = decoder0.readInt(8);
                }
            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.count, 8);
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
            WatchTimeRecorderUpdateUnderflowCountParams other = (WatchTimeRecorderUpdateUnderflowCountParams) object;
            if (this.count!= other.count)
                return false;
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.count);
            return result;
        }
    }



}
