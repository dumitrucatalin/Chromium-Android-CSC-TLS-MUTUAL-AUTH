
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/interfaces/cookie_manager.mojom
//

package org.chromium.network.mojom;

import org.chromium.mojo.bindings.DeserializationException;


public final class CanonicalCookie extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 80;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(80, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public String name;
    public String value;
    public String domain;
    public String path;
    public org.chromium.mojo.common.mojom.Time creation;
    public org.chromium.mojo.common.mojom.Time expiry;
    public org.chromium.mojo.common.mojom.Time lastAccess;
    public boolean secure;
    public boolean httponly;
    public int siteRestrictions;
    public int priority;

    private CanonicalCookie(int version) {
        super(STRUCT_SIZE, version);
        this.secure = (boolean) false;
        this.httponly = (boolean) false;
        this.siteRestrictions = (int) CookieSameSite.NO_RESTRICTION;
        this.priority = (int) CookiePriority.MEDIUM;
    }

    public CanonicalCookie() {
        this(0);
    }

    public static CanonicalCookie deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static CanonicalCookie deserialize(java.nio.ByteBuffer data) {
        if (data == null)
            return null;

        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static CanonicalCookie decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        CanonicalCookie result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            result = new CanonicalCookie(mainDataHeader.elementsOrVersion);
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.name = decoder0.readString(8, false);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.value = decoder0.readString(16, false);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.domain = decoder0.readString(24, false);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.path = decoder0.readString(32, false);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(40, true);
                result.creation = org.chromium.mojo.common.mojom.Time.decode(decoder1);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(48, true);
                result.expiry = org.chromium.mojo.common.mojom.Time.decode(decoder1);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(56, true);
                result.lastAccess = org.chromium.mojo.common.mojom.Time.decode(decoder1);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.secure = decoder0.readBoolean(64, 0);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.httponly = decoder0.readBoolean(64, 1);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.siteRestrictions = decoder0.readInt(68);
                    CookieSameSite.validate(result.siteRestrictions);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.priority = decoder0.readInt(72);
                    CookiePriority.validate(result.priority);
            }
        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.name, 8, false);
        
        encoder0.encode(this.value, 16, false);
        
        encoder0.encode(this.domain, 24, false);
        
        encoder0.encode(this.path, 32, false);
        
        encoder0.encode(this.creation, 40, true);
        
        encoder0.encode(this.expiry, 48, true);
        
        encoder0.encode(this.lastAccess, 56, true);
        
        encoder0.encode(this.secure, 64, 0);
        
        encoder0.encode(this.httponly, 64, 1);
        
        encoder0.encode(this.siteRestrictions, 68);
        
        encoder0.encode(this.priority, 72);
    }

    /**
     * @see Object#equals(Object)
     */
    @Override
    public boolean equals(Object object) {
        if (object == this)
            return true;
        if (object == null)
            return false;
        if (getClass() != object.getClass())
            return false;
        CanonicalCookie other = (CanonicalCookie) object;
        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.name, other.name))
            return false;
        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.value, other.value))
            return false;
        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.domain, other.domain))
            return false;
        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.path, other.path))
            return false;
        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.creation, other.creation))
            return false;
        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.expiry, other.expiry))
            return false;
        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.lastAccess, other.lastAccess))
            return false;
        if (this.secure!= other.secure)
            return false;
        if (this.httponly!= other.httponly)
            return false;
        if (this.siteRestrictions!= other.siteRestrictions)
            return false;
        if (this.priority!= other.priority)
            return false;
        return true;
    }

    /**
     * @see Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = prime + getClass().hashCode();
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.name);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.value);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.domain);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.path);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.creation);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.expiry);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.lastAccess);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.secure);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.httponly);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.siteRestrictions);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(this.priority);
        return result;
    }
}