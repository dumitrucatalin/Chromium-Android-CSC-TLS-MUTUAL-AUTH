
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/interfaces/cors.mojom
//

package org.chromium.network.mojom;

import org.chromium.mojo.bindings.DeserializationException;

public final class CorsError {


    public static final int DISALLOWED_BY_MODE = 0;

    public static final int INVALID_RESPONSE = DISALLOWED_BY_MODE + 1;

    public static final int ALLOW_ORIGIN_MISMATCH = INVALID_RESPONSE + 1;

    public static final int SUB_ORIGIN_MISMATCH = ALLOW_ORIGIN_MISMATCH + 1;

    public static final int WILDCARD_ORIGIN_NOT_ALLOWED = SUB_ORIGIN_MISMATCH + 1;

    public static final int MISSING_ALLOW_ORIGIN_HEADER = WILDCARD_ORIGIN_NOT_ALLOWED + 1;

    public static final int MULTIPLE_ALLOW_ORIGIN_VALUES = MISSING_ALLOW_ORIGIN_HEADER + 1;

    public static final int INVALID_ALLOW_ORIGIN_VALUE = MULTIPLE_ALLOW_ORIGIN_VALUES + 1;

    public static final int DISALLOW_CREDENTIALS_NOT_SET_TO_TRUE = INVALID_ALLOW_ORIGIN_VALUE + 1;

    public static final int PREFLIGHT_INVALID_STATUS = DISALLOW_CREDENTIALS_NOT_SET_TO_TRUE + 1;

    public static final int PREFLIGHT_MISSING_ALLOW_EXTERNAL = PREFLIGHT_INVALID_STATUS + 1;

    public static final int PREFLIGHT_INVALID_ALLOW_EXTERNAL = PREFLIGHT_MISSING_ALLOW_EXTERNAL + 1;

    public static final int REDIRECT_DISALLOWED_SCHEME = PREFLIGHT_INVALID_ALLOW_EXTERNAL + 1;

    public static final int REDIRECT_CONTAINS_CREDENTIALS = REDIRECT_DISALLOWED_SCHEME + 1;

    public static final int LAST = (int) (CorsError.REDIRECT_CONTAINS_CREDENTIALS);


    private static final boolean IS_EXTENSIBLE = false;

    public static boolean isKnownValue(int value) {
        switch (value) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
                return true;
        }
        return false;
    }

    public static void validate(int value) {
        if (IS_EXTENSIBLE || isKnownValue(value))
            return;

        throw new DeserializationException("Invalid enum value.");
    }

    private CorsError() {}

}